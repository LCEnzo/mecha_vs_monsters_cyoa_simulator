name: Test and Lint

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [ "synchronize", "opened", "reopened", "ready_for_review" ]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        # pyproject.toml can affect how a project is built, even tho it isn't being used as such currently 
        key: ${{ runner.os }}-py${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements*.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-py${{ matrix.python-version }}-pip-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Verify installed packages
      run: |
        pip check

    - name: Check types with mypy
      run: |
        mypy --show-traceback --check-untyped-defs --local-partial-types .

    - name: Lint with ruff
      run: |
        ruff check --output-format=github .

    - name: Check formatting with ruff
      run: |
        ruff format --check --diff .

    - name: Run tests and generate coverage
      run: |
        pytest --cov --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        token: ${{ secrets.CODECOV_TOKEN }}
